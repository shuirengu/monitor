<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hunca.system.mapper.SysLogMapper">
  <resultMap id="BaseResultMap" type="com.hunca.system.model.SysLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="createdTime" jdbcType="TIMESTAMP" property="createdtime" />
  </resultMap>
   <sql id="queryWhereId">
       <where>
          <if test="username!=null and username!=''">
            username like concat("%",#{username},"%")
          </if>
       </where>
   </sql>
  <sql id="Base_Column_List">
    id, username, operation, method, params, time, ip, createdTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_logs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_logs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hunca.system.model.SysLog">
    insert into sys_logs (id, username, operation, 
      method, params, time, 
      ip, createdTime)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, #{time,jdbcType=BIGINT}, 
      #{ip,jdbcType=VARCHAR}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.hunca.system.model.SysLog">
    insert into sys_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="ip != null">
        ip,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hunca.system.model.SysLog">
    update sys_logs
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hunca.system.model.SysLog">
    update sys_logs
    set username = #{username,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
  
    where id = #{id,jdbcType=BIGINT}
  </update>
 	
   <select id="getRowCount" resultType="int">
       select count(*)
       from sys_logs
       <include refid="queryWhereId"/>
   </select>
   <select id="findPageObjects"
           resultType="com.hunca.system.model.SysLog">
       select 
       <include refid="Base_Column_List"></include>
       from sys_logs
       <include refid="queryWhereId"/>
       order by createdTime desc
       limit #{startIndex},#{pageSize}
   </select>
   		 
   <!-- 基于id删除日志对象 -->
   <delete id="deleteObjects">
       delete from sys_logs
       where id in <!-- (1,2,3,4) -->
       <foreach collection="ids"
                open="("
                close=")"
                separator=","
                item="id">
             #{id}
       </foreach>
   </delete>
</mapper>